// <auto-generated />
using Ef.RealationConfigurationSample.TablePerHierarchy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ef.RealationConfigurationSample.Migrations
{
    [DbContext(typeof(SampleContext))]
    [Migration("20230615003354_Tph")]
    partial class Tph
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ef.RealationConfigurationSample.TablePerHierarchy.PersonTPH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasDiscriminator<int>("PersonType").HasValue(1);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ef.RealationConfigurationSample.TablePerHierarchy.Student", b =>
                {
                    b.HasBaseType("Ef.RealationConfigurationSample.TablePerHierarchy.PersonTPH");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Ef.RealationConfigurationSample.TablePerHierarchy.Teacher", b =>
                {
                    b.HasBaseType("Ef.RealationConfigurationSample.TablePerHierarchy.PersonTPH");

                    b.Property<string>("TeacherNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(3);
                });
#pragma warning restore 612, 618
        }
    }
}
